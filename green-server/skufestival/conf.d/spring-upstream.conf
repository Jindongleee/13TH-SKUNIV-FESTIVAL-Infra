upstream spring_backend {
    server spring1:8080 max_fails=3 fail_timeout=10s;
    server spring2:8080 max_fails=3 fail_timeout=10s;
    server spring3:8080 max_fails=3 fail_timeout=10s;
}

server {
    listen 80;
    server_name spring2.2025skufestival.site;

    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Content-Type, Accept, Authorization' always;
    add_header 'Access-Control-Allow-Credentials' 'false' always;

    client_max_body_size 50M;

    location / {
        # OPTIONS 프리플라이트 요청 전용 처리
	if ($request_method = OPTIONS) {
        	add_header 'Access-Control-Allow-Origin' '*' always;
        	add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        	add_header 'Access-Control-Allow-Headers' 'Content-Type, Accept, Authorization' always;
        	add_header 'Access-Control-Max-Age' 1728000 always;
        	add_header 'Content-Length' 0;
        	return 204;
	}

        # 프록시 설정
        proxy_pass http://spring_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}